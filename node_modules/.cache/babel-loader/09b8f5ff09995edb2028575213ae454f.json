{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Xerxis\\\\Desktop\\\\Projects\\\\Forecast\\\\src\\\\Forecast.js\";\nimport React from 'react';\nimport WeatherCard from './WeatherCard.js';\nimport DayCast from './DayCast.js';\n/* Global variables */\n\nconst key = \"54a84a123d401ac68736a6bca89f4301\";\nconst ids = {\n  6167865: \"Toronto\",\n  5907364: \"Brampton\",\n  6075357: \"Mississauga\",\n  6122091: \"Richmond Hill\",\n  5992996: \"Kitchener\",\n  6176823: \"Waterloo\",\n  6066513: \"Markham\",\n  6094817: \"Ottawa\",\n  5969782: \"Hamilton\",\n  6173577: \"Vaughan\",\n  6094578: \"Oshawa\"\n};\nconst codes = {\n  toronto: '6167865',\n  brampton: '5907364',\n  mississauga: '6075357',\n  richmondhill: '6122091',\n  kitchener: '5992996',\n  waterloo: '6176823',\n  markham: '6066513',\n  ottawa: '6094817',\n  hamilton: '5969782',\n  vaughan: '6173577',\n  oshawa: '6094578'\n};\nvar url = \"https://api.openweathermap.org/data/2.5/forecast?id=6167865&appid=\" + key;\nconst days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n/* Styles */\n\nconst divStyle = {\n  width: \"20%\",\n  float: \"left\"\n};\nconst forecastStyle = {\n  minWidth: \"1000px\"\n};\n/* Helper Functions */\n\nfunction changeURL(city) {\n  url = \"https://api.openweathermap.org/data/2.5/forecast?id=\" + codes[city] + \"&appid=\" + key;\n}\n\nfunction getDays(data) {\n  var arr = [];\n\n  for (let i = 0; i < 40; i += 8) {\n    arr.push(days[(new Date(data.list[i].dt_txt.slice(0, 10)).getDay() + 1) % 7]);\n  }\n\n  return arr;\n}\n\nfunction getConditions(data) {\n  var arr = [];\n\n  for (let i = 0; i < 40; i += 8) {\n    arr.push(data.list[i].weather[0].main);\n  }\n\n  return arr;\n}\n\nfunction getHighLows(data, starts) {\n  var lows = [];\n  var highs = [];\n\n  for (let i = 0; i < starts.length - 1; i++) {\n    var high = 0;\n    var low = Number.MAX_SAFE_INTEGER;\n    var start = starts[i];\n    var end = starts[i + 1];\n\n    for (let j = start; j < end; j++) {\n      high = Math.max(high, data.list[j].main.temp_max);\n      low = Math.min(low, data.list[j].main.temp_min);\n    }\n\n    highs.push((high - 273.15).toFixed(2));\n    lows.push((low - 273.15).toFixed(2));\n  }\n\n  const result = {\n    highs: highs,\n    lows: lows\n  };\n  return result;\n}\n\nfunction getEnd(entry1) {\n  return (24 - new Date(entry1.dt_txt).getHours()) / 3;\n}\n\nfunction getStarts(data) {\n  var arr = [];\n  let end = getEnd(data[0]);\n  arr.push(0);\n\n  for (let i = end; i <= 40; i += 8) {\n    arr.push(i);\n  }\n\n  return arr;\n}\n\nfunction getHourly(arr, starts) {\n  var start = starts[1];\n  var temps = [];\n  var conds = [];\n  var descs = []; // All of the data for the first day may not be present\n  // Push all the N/A data\n\n  for (let i = 0; i < 8 - start; i++) {\n    temps.push(\"N/A\");\n    conds.push(\"N/A\");\n    descs.push(\"N/A\");\n  }\n\n  for (let i = 0; i < 40 - 8 + start; i++) {\n    temps.push((arr[i].main.temp - 273.15).toFixed(2) + \"Â°C\");\n    conds.push(arr[i].weather[0].main);\n    descs.push(arr[i].weather[0].description);\n  }\n\n  return {\n    temps,\n    conds,\n    descs\n  };\n}\n\nasync function getEverything() {\n  var response = await fetch(url);\n\n  if (response.status === 429) {\n    return -1;\n  } //Too many requests\n\n\n  var forecast = await response.json();\n  console.log(forecast);\n  var starts = getStarts(forecast.list);\n  var info = {};\n  info.days = getDays(forecast);\n  info.conditions = getConditions(forecast);\n  var highLows = getHighLows(forecast, starts);\n  info.highs = highLows.highs;\n  info.lows = highLows.lows;\n  info.starts = starts;\n  var hourlyData = getHourly(forecast.list, starts);\n  info.hourly = hourlyData.temps;\n  info.hourlyConditions = hourlyData.conds;\n  info.descriptions = hourlyData.descs;\n  return await info;\n}\n/* The Component */\n\n\nclass Forecast extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      days: 0,\n      highs: 0,\n      lows: 0,\n      conds: 0,\n      formCity: 'toronto',\n      city: 'toronto',\n      code: '6167865',\n      status: 200,\n      starts: [],\n      hourly: [],\n      hourlyConds: [],\n      descriptions: [],\n      dayIndex: -1\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.dayFocus = this.dayFocus.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      formCity: event.target.value\n    });\n  }\n\n  handleSubmit(event) {\n    if (this.state.formCity !== this.state.city) {\n      this.setState({\n        city: this.state.formCity,\n        code: codes[this.state.formCity]\n      }, () => this.componentDidMount());\n    }\n\n    event.preventDefault();\n  }\n\n  dayFocus(index) {\n    this.setState({\n      dayIndex: index\n    });\n  }\n\n  render() {\n    if (this.state.days === 0) {\n      return React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, \"The Forecast is loading, please wait\");\n    }\n\n    if (this.state.status === 429) {\n      return React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, \"Too many forecast requests have been made. Please come back in an hour.\");\n    }\n\n    if (this.state.dayIndex !== -1) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, React.createElement(DayCast, {\n        day: this.state.days[this.state.dayIndex],\n        values: this.state.hourly,\n        start: this.state.dayIndex * 8,\n        conditions: this.state.hourlyConds,\n        descriptions: this.state.descriptions,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: () => this.dayFocus(-1),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, \"Back\"));\n    } else {\n      return React.createElement(\"div\", {\n        style: forecastStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }, ids[this.state.code] + \"'s Forecast\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        onClick: () => this.dayFocus(0),\n        style: divStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, \" \", React.createElement(WeatherCard, {\n        day: this.state.days[0],\n        high: this.state.highs[0],\n        low: this.state.lows[0],\n        condition: this.state.conds[0],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }), \" \"), React.createElement(\"div\", {\n        onClick: () => this.dayFocus(1),\n        style: divStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, \" \", React.createElement(WeatherCard, {\n        day: this.state.days[1],\n        high: this.state.highs[1],\n        low: this.state.lows[1],\n        condition: this.state.conds[1],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }), \" \"), React.createElement(\"div\", {\n        onClick: () => this.dayFocus(2),\n        style: divStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, \" \", React.createElement(WeatherCard, {\n        day: this.state.days[2],\n        high: this.state.highs[2],\n        low: this.state.lows[2],\n        condition: this.state.conds[2],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }), \" \"), React.createElement(\"div\", {\n        onClick: () => this.dayFocus(3),\n        style: divStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }, \" \", React.createElement(WeatherCard, {\n        day: this.state.days[3],\n        high: this.state.highs[3],\n        low: this.state.lows[3],\n        condition: this.state.conds[3],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }), \" \"), React.createElement(\"div\", {\n        onClick: () => this.dayFocus(4),\n        style: divStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }, \" \", React.createElement(WeatherCard, {\n        day: this.state.days[4],\n        high: this.state.highs[4],\n        low: this.state.lows[4],\n        condition: this.state.conds[4],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }), \" \")), React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, \"Choose a city to display its forecast \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }), React.createElement(\"select\", {\n        value: this.state.formCity,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"toronto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, \"Toronto\"), React.createElement(\"option\", {\n        value: \"brampton\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }, \"Brampton\"), React.createElement(\"option\", {\n        value: \"mississauga\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, \"Mississauga\"), React.createElement(\"option\", {\n        value: \"richmondhill\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, \"Richmond Hill\"), React.createElement(\"option\", {\n        value: \"kitchener\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, \"Kitchener\"), React.createElement(\"option\", {\n        value: \"waterloo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, \"Waterloo\"), React.createElement(\"option\", {\n        value: \"markham\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, \"Markham\"), React.createElement(\"option\", {\n        value: \"ottawa\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }, \"Ottawa\"), React.createElement(\"option\", {\n        value: \"hamilton\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, \"Hamilton\"), React.createElement(\"option\", {\n        value: \"vaughan\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, \"Vaughan\"), React.createElement(\"option\", {\n        value: \"oshawa\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }, \"Oshawa\"))), React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"Submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      })));\n    }\n  }\n\n  async componentDidMount() {\n    changeURL(this.state.city);\n    var info = await getEverything();\n\n    if (info === -1) {\n      this.setState({\n        status: 429\n      });\n    } else {\n      this.setState({\n        days: info.days,\n        highs: info.highs,\n        lows: info.lows,\n        conds: info.conditions,\n        starts: info.starts,\n        hourly: info.hourly\n      });\n    }\n  }\n\n}\n\nexport default Forecast;","map":{"version":3,"sources":["C:\\Users\\Xerxis\\Desktop\\Projects\\Forecast\\src\\Forecast.js"],"names":["React","WeatherCard","DayCast","key","ids","codes","toronto","brampton","mississauga","richmondhill","kitchener","waterloo","markham","ottawa","hamilton","vaughan","oshawa","url","days","divStyle","width","float","forecastStyle","minWidth","changeURL","city","getDays","data","arr","i","push","Date","list","dt_txt","slice","getDay","getConditions","weather","main","getHighLows","starts","lows","highs","length","high","low","Number","MAX_SAFE_INTEGER","start","end","j","Math","max","temp_max","min","temp_min","toFixed","result","getEnd","entry1","getHours","getStarts","getHourly","temps","conds","descs","temp","description","getEverything","response","fetch","status","forecast","json","console","log","info","conditions","highLows","hourlyData","hourly","hourlyConditions","descriptions","Forecast","Component","constructor","props","state","formCity","code","hourlyConds","dayIndex","handleChange","bind","handleSubmit","dayFocus","event","setState","target","value","componentDidMount","preventDefault","index","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport WeatherCard from './WeatherCard.js';\nimport DayCast from './DayCast.js';\n\n\n/* Global variables */\nconst key = \"54a84a123d401ac68736a6bca89f4301\";\n\nconst ids = {6167865: \"Toronto\",\n5907364: \"Brampton\",\n6075357: \"Mississauga\",\n6122091: \"Richmond Hill\",\n5992996: \"Kitchener\",\n6176823: \"Waterloo\",\n6066513: \"Markham\",\n6094817: \"Ottawa\",\n5969782: \"Hamilton\",\n6173577: \"Vaughan\",\n6094578: \"Oshawa\"};\n\nconst codes = {toronto: '6167865',\nbrampton: '5907364',\nmississauga: '6075357',\nrichmondhill: '6122091',\nkitchener: '5992996',\nwaterloo: '6176823', \nmarkham: '6066513',\nottawa: '6094817',\nhamilton: '5969782', \nvaughan: '6173577', \noshawa: '6094578'};\n\nvar url = \"https://api.openweathermap.org/data/2.5/forecast?id=6167865&appid=\" + key;\n\nconst days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n\n\n/* Styles */\nconst divStyle = {\n\twidth: \"20%\",\n\tfloat: \"left\"\n};\nconst forecastStyle = {\n\tminWidth: \"1000px\",\n};\n\n\n/* Helper Functions */\nfunction changeURL(city){\n\turl = \"https://api.openweathermap.org/data/2.5/forecast?id=\" + codes[city] + \"&appid=\" + key;\n}\n\nfunction getDays(data) {\n\tvar arr = [];\n\tfor (let i = 0; i < 40; i+=8){\n\t\tarr.push(days[(new Date(data.list[i].dt_txt.slice(0,10)).getDay() + 1) % 7]);\n\t}\n\treturn arr;\n}\n\t\nfunction getConditions(data) {\n\tvar arr = [];\n\tfor (let i = 0; i < 40; i+=8){\n\t\tarr.push(data.list[i].weather[0].main);\n\t}\n\treturn arr;\n}\n\nfunction getHighLows(data, starts) {\n\tvar lows = [];\n\tvar highs = [];\n\tfor (let i = 0; i < starts.length - 1; i++){\n\t\tvar high = 0;\n\t\tvar low = Number.MAX_SAFE_INTEGER;\n\t\tvar start = starts[i];\n\t\tvar end = starts[i + 1];\n\t\tfor (let j = start; j < end; j++){\n\t\t\thigh = Math.max(high, data.list[j].main.temp_max);\n\t\t\tlow = Math.min(low, data.list[j].main.temp_min);\n\t\t}\n\t\thighs.push((high - 273.15).toFixed(2));\n\t\tlows.push((low - 273.15).toFixed(2));\n\t}\n\tconst result = {highs: highs, lows: lows};\n\treturn result;\n}\n\nfunction getEnd(entry1) {\n\treturn (24 - new Date(entry1.dt_txt).getHours()) / 3;\n}\n\nfunction getStarts(data) {\n\tvar arr = [];\n\tlet end = getEnd(data[0]);\n\tarr.push(0);\n\tfor (let i = end; i <= 40; i+=8){\n\t\tarr.push(i);\n\t}\n\treturn arr;\n}\n\nfunction getHourly(arr, starts){\n\tvar start = starts[1];\n\t\tvar temps = [];\n\t\tvar conds = [];\n\t\tvar descs = [];\n\t\t// All of the data for the first day may not be present\n\t\t// Push all the N/A data\n\t\tfor (let i = 0; i < 8-start; i++){\n\t\t\ttemps.push(\"N/A\");\n\t\t\tconds.push(\"N/A\");\n\t\t\tdescs.push(\"N/A\");\n\t\t}\t\n\t\tfor (let i = 0; i < (40 - 8 + start); i++){\n\t\t\ttemps.push((arr[i].main.temp - 273.15).toFixed(2) + \"Â°C\");\n\t\t\tconds.push(arr[i].weather[0].main);\n\t\t\tdescs.push(arr[i].weather[0].description);\n\t\t}\n\t\treturn {temps, conds, descs};\n}\n\nasync function getEverything(){\n\tvar response = await fetch(url);\n\t\tif (response.status === 429){return -1;} //Too many requests\n\t\tvar forecast =  await response.json();\n\t\tconsole.log(forecast);\n\t\tvar starts = getStarts(forecast.list);\n\t\tvar info = {};\n\t\tinfo.days = getDays(forecast);\n\t\tinfo.conditions = getConditions(forecast);\n\t\tvar highLows = getHighLows(forecast, starts);\n\t\tinfo.highs = highLows.highs;\n\t\tinfo.lows = highLows.lows;\n\t\tinfo.starts = starts;\n\t\tvar hourlyData = getHourly(forecast.list, starts);\n\t\tinfo.hourly  = hourlyData.temps;\n\t\tinfo.hourlyConditions = hourlyData.conds;\n\t\tinfo.descriptions = hourlyData.descs;\n\t\treturn await info;\n}\n\n\n/* The Component */\nclass Forecast extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {days: 0,\n\t\thighs: 0,\n\t\tlows: 0,\n\t\tconds: 0,\n\t\tformCity: 'toronto',\n\t\tcity: 'toronto',\n\t\tcode: '6167865',\n\t\tstatus: 200,\n\t\tstarts: [],\n\t\thourly: [],\n\t\thourlyConds: [],\n\t\tdescriptions: [],\n\t\tdayIndex: -1,\n\t\t};\n\t\tthis.handleChange = this.handleChange.bind(this);\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\n\t\tthis.dayFocus = this.dayFocus.bind(this);\n\t}\n\t\n\thandleChange(event) {\n\t\tthis.setState({formCity: event.target.value});\n\t}\n\t\n\thandleSubmit(event) {\n\t\tif (this.state.formCity !== this.state.city) {\n\t\t\tthis.setState({city: this.state.formCity, code: codes[this.state.formCity]}, () => this.componentDidMount());\n\t\t}\n    event.preventDefault();\n  }\n\t\n\tdayFocus(index){\n\t\tthis.setState({dayIndex: index});\n\t}\n\t\n\trender(){\n\t\tif (this.state.days === 0){\n\t\t\treturn (<h1>{\"The Forecast is loading, please wait\"}</h1>);\n\t\t}\n\t\tif (this.state.status === 429){\n\t\t\treturn (<h1>{\"Too many forecast requests have been made. Please come back in an hour.\"}</h1>);\n\t\t}\n\t\tif (this.state.dayIndex !== -1){\n\t\t\treturn <div>\n\t\t\t<DayCast day={this.state.days[this.state.dayIndex]} values={this.state.hourly} start={this.state.dayIndex*8} conditions={this.state.hourlyConds} descriptions={this.state.descriptions}/>\n\t\t\t<button onClick={() => this.dayFocus(-1)}>Back</button>\n\t\t\t</div>;\n\t\t}\n\t\telse {\n\t\t\treturn (\n\t\t\t<div style = {forecastStyle}>\n\t\t\t<h1>{ids[this.state.code] + \"'s Forecast\"}</h1>\n\t\t\t<div>\n\t\t\t<div onClick={() => this.dayFocus(0)} style = {divStyle} > <WeatherCard day={this.state.days[0]} high={this.state.highs[0]} low={this.state.lows[0]} condition={this.state.conds[0]}/> </div>\n\t\t\t<div onClick={() => this.dayFocus(1)} style = {divStyle} > <WeatherCard day={this.state.days[1]} high={this.state.highs[1]} low={this.state.lows[1]} condition={this.state.conds[1]}/> </div>\n\t\t\t<div onClick={() => this.dayFocus(2)} style = {divStyle} > <WeatherCard day={this.state.days[2]} high={this.state.highs[2]} low={this.state.lows[2]} condition={this.state.conds[2]}/> </div>\n\t\t\t<div onClick={() => this.dayFocus(3)} style = {divStyle} > <WeatherCard day={this.state.days[3]} high={this.state.highs[3]} low={this.state.lows[3]} condition={this.state.conds[3]}/> </div>\n\t\t\t<div onClick={() => this.dayFocus(4)} style = {divStyle} > <WeatherCard day={this.state.days[4]} high={this.state.highs[4]} low={this.state.lows[4]} condition={this.state.conds[4]}/> </div>\n\t\t\t</div>\n\t\t\t<form onSubmit={this.handleSubmit}>\n        <label>\n          Choose a city to display its forecast <br></br>\n          <select value={this.state.formCity} onChange={this.handleChange}>\n            <option value=\"toronto\">Toronto</option>\n            <option value=\"brampton\">Brampton</option>\n\t\t\t\t\t\t<option value=\"mississauga\">Mississauga</option>\n\t\t\t\t\t\t<option value=\"richmondhill\">Richmond Hill</option>\n\t\t\t\t\t\t<option value=\"kitchener\">Kitchener</option>\n\t\t\t\t\t\t<option value=\"waterloo\">Waterloo</option>\n\t\t\t\t\t\t<option value=\"markham\">Markham</option>\n\t\t\t\t\t\t<option value=\"ottawa\">Ottawa</option>\n\t\t\t\t\t\t<option value=\"hamilton\">Hamilton</option>\n\t\t\t\t\t\t<option value=\"vaughan\">Vaughan</option>\n\t\t\t\t\t\t<option value=\"oshawa\">Oshawa</option>\n          </select>\n        </label>\n        <input type=\"submit\" value=\"Submit\" />\n      </form>\n\t\t\t</div>\n\t\t\t);\n\t\t}\n\t}\n\t\n\tasync componentDidMount(){\n\t\tchangeURL(this.state.city);\n\t\tvar info = await getEverything();\n\t\tif (info === -1){\n\t\t\tthis.setState({status: 429});\n\t\t}\n\t\telse {\n\t\tthis.setState({days: info.days, highs: info.highs,\n\t\tlows: info.lows, conds: info.conditions, starts: info.starts, hourly: info.hourly});\n\t\t}\n\t}\n}\n\t\nexport default Forecast;"]},"metadata":{},"sourceType":"module"}