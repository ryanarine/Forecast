{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Xerxis\\\\Desktop\\\\Projects\\\\forecast2\\\\src\\\\Forecast.js\";\nimport React from 'react';\nimport WeatherCard from './WeatherCard.js';\nimport CityList from './CityList.js';\nconst divStyle = {\n  width: \"20%\",\n  float: \"left\"\n};\n\nclass Forecast extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      days: 0,\n      highs: 0,\n      lows: 0,\n      conds: 0\n    };\n  }\n\n  render() {\n    if (this.state.days === 0) {\n      return React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, \"The Forecast is loading, please wait\");\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: divStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, \" \", React.createElement(WeatherCard, {\n        day: this.state.days[0],\n        high: this.state.highs[0],\n        low: this.state.lows[0],\n        condition: this.state.conds[0],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }), \" \"), React.createElement(\"div\", {\n        style: divStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, \" \", React.createElement(WeatherCard, {\n        day: this.state.days[1],\n        high: this.state.highs[1],\n        low: this.state.lows[1],\n        condition: this.state.conds[1],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }), \" \"), React.createElement(\"div\", {\n        style: divStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, \" \", React.createElement(WeatherCard, {\n        day: this.state.days[2],\n        high: this.state.highs[2],\n        low: this.state.lows[2],\n        condition: this.state.conds[2],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }), \" \"), React.createElement(\"div\", {\n        style: divStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, \" \", React.createElement(WeatherCard, {\n        day: this.state.days[3],\n        high: this.state.highs[3],\n        low: this.state.lows[3],\n        condition: this.state.conds[3],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }), \" \"), React.createElement(\"div\", {\n        style: divStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, \" \", React.createElement(WeatherCard, {\n        day: this.state.days[4],\n        high: this.state.highs[4],\n        low: this.state.lows[4],\n        condition: this.state.conds[4],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }), \" \")), React.createElement(CityList, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }));\n    }\n  }\n\n  async componentDidMount() {\n    const info = await Data.getEverything();\n    this.setState({\n      days: info.days,\n      highs: info.highs,\n      lows: info.lows,\n      conds: info.conditions\n    });\n  }\n\n}\n\nexport default Forecast;","map":{"version":3,"sources":["C:\\Users\\Xerxis\\Desktop\\Projects\\forecast2\\src\\Forecast.js"],"names":["React","WeatherCard","CityList","divStyle","width","float","Forecast","Component","constructor","props","state","days","highs","lows","conds","render","componentDidMount","info","Data","getEverything","setState","conditions"],"mappings":"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","sourcesContent":["import React from 'react';\nimport WeatherCard from './WeatherCard.js';\nimport CityList from './CityList.js';\n\nconst divStyle = {\n\twidth: \"20%\",\n\tfloat: \"left\"\n};\n\nclass Forecast extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {days: 0,\n\t\thighs: 0,\n\t\tlows: 0,\n\t\tconds: 0,\n\t\t};\n\t}\n\t\n\trender(){\n\t\tif (this.state.days === 0){\n\t\t\treturn (<h1>{\"The Forecast is loading, please wait\"}</h1>)\n\t\t}\n\t\telse {\n\t\t\treturn (\n\t\t\t<div>\n\t\t\t<div>\n\t\t\t<div style = {divStyle} > <WeatherCard day={this.state.days[0]} high={this.state.highs[0]} low={this.state.lows[0]} condition={this.state.conds[0]}/> </div>\n\t\t\t<div style = {divStyle} > <WeatherCard day={this.state.days[1]} high={this.state.highs[1]} low={this.state.lows[1]} condition={this.state.conds[1]}/> </div>\n\t\t\t<div style = {divStyle} > <WeatherCard day={this.state.days[2]} high={this.state.highs[2]} low={this.state.lows[2]} condition={this.state.conds[2]}/> </div>\n\t\t\t<div style = {divStyle} > <WeatherCard day={this.state.days[3]} high={this.state.highs[3]} low={this.state.lows[3]} condition={this.state.conds[3]}/> </div>\n\t\t\t<div style = {divStyle} > <WeatherCard day={this.state.days[4]} high={this.state.highs[4]} low={this.state.lows[4]} condition={this.state.conds[4]}/> </div>\n\t\t\t</div>\n\t\t\t<CityList />\n\t\t\t</div>\n\t\t\t);\n\t\t}\n\t}\n\t\n\tasync componentDidMount(){\n\t\tconst info = await Data.getEverything();\n\t\tthis.setState({days: info.days, highs: info.highs,\n\t\tlows: info.lows, conds: info.conditions});\n\t}\n}\n\t\nexport default Forecast;"]},"metadata":{},"sourceType":"module"}