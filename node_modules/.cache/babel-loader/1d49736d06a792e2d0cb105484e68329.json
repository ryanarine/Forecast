{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Xerxis\\\\Desktop\\\\Projects\\\\forecast2\\\\src\\\\Forecast.js\";\nimport React from 'react';\nimport WeatherCard from './WeatherCard.js';\nimport CityList from './CityList.js';\nconst key = \"54a84a123d401ac68736a6bca89f4301\";\nconst ids = {\n  6167865: \"Toronto\",\n  5907364: \"Brampton\",\n  6075357: \"Mississauga\",\n  6122091: \"Richmond Hill\",\n  5992996: \"Kitchener\",\n  6176823: \"Waterloo\",\n  6066513: \"Markham\",\n  6094817: \"Ottawa\",\n  5969782: \"Hamilton\",\n  6173577: \"Vaughan\",\n  6094578: \"Oshawa\"\n};\nconst codes = {\n  toronto: '6167865',\n  brampton: '5907364',\n  mississauga: '6075357',\n  richmondhill: '6122091',\n  kitchener: '5992996',\n  waterloo: '6176823',\n  markham: '6066513',\n  ottawa: '6094817',\n  hamilton: '5969782',\n  vaughan: '6173577',\n  oshawa: '6094578'\n};\nvar url = \"https://api.openweathermap.org/data/2.5/forecast?id=6167865\" + \"&appid=\" + key;\nconst days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\nconst divStyle = {\n  width: \"20%\",\n  float: \"left\"\n};\nconst forecastStyle = {\n  minWidth: \"500px\"\n};\n\nfunction changeURL(city) {\n  url = \"https://api.openweathermap.org/data/2.5/forecast?id=\" + codes[city] + \"&appid=\" + key;\n}\n\nvar genAPI = async function () {\n  console.log(url);\n  var response = await fetch(url);\n  var data = await response.json();\n  return async function () {\n    return await data;\n  };\n}();\n\nasync function getAPI() {\n  var temp = await genAPI;\n  return await temp();\n}\n\nfunction getDays(data) {\n  var arr = [];\n\n  for (let i = 0; i < 40; i += 8) {\n    arr.push(days[(new Date(data.list[i].dt_txt.slice(0, 10)).getDay() + 1) % 7]);\n  }\n\n  return arr;\n}\n\nfunction getConditions(data) {\n  var arr = [];\n\n  for (let i = 0; i < 40; i += 8) {\n    arr.push(data.list[i].weather[0].main);\n  }\n\n  return arr;\n}\n\nfunction getHighLows(data, starts) {\n  var lows = [];\n  var highs = [];\n\n  for (let i = 0; i < starts.length - 1; i++) {\n    var high = 0;\n    var low = Number.MAX_SAFE_INTEGER;\n    var start = starts[i];\n    var end = starts[i + 1];\n\n    for (let j = start; j < end; j++) {\n      high = Math.max(high, data.list[j].main.temp_max);\n      low = Math.min(low, data.list[j].main.temp_min);\n    }\n\n    highs.push((high - 273.15).toFixed(2));\n    lows.push((low - 273.15).toFixed(2));\n  }\n\n  const result = {\n    highs: highs,\n    lows: lows\n  };\n  return result;\n}\n\nfunction getEnd(entry1) {\n  return (24 - new Date(entry1.dt_txt).getHours()) / 3;\n}\n\nfunction getStarts(data) {\n  var arr = [];\n  let end = getEnd(data[0]);\n  arr.push(0);\n\n  for (let i = end; i <= 40; i += 8) {\n    arr.push(i);\n  }\n\n  return arr;\n}\n\nvar Data = {\n  getHourly: async function (day) {\n    var temps = [];\n    var forecast = await getAPI();\n    console.log(forecast);\n    var arr = forecast.list;\n    var starts = getStarts(arr);\n    var index = getDays(forecast).findIndex(value => value === day);\n\n    if (index === -1) {\n      return null;\n    }\n\n    var start = starts[index];\n    var end = starts[index + 1]; // All of the data for the first day may not be present\n\n    if (start === 0) {\n      // Push all the N/A data\n      for (let i = 0; i < 8 - end; i++) {\n        temps.push(\"N/A\");\n      }\n    }\n\n    for (let i = start; i < end; i++) {\n      temps.push((arr[i].main.temp - 273.15).toFixed(2) + \"Â°C\");\n    }\n\n    return temps;\n  },\n  getEverything: async function () {\n    var response = await fetch(url);\n    var forecast = await response.json();\n    var starts = getStarts(forecast.list);\n    var info = {};\n    info.days = getDays(forecast);\n    info.conditions = getConditions(forecast);\n    var highLows = getHighLows(forecast, starts);\n    info.highs = highLows.highs;\n    info.lows = highLows.lows;\n    return await info;\n  }\n};\n\nclass Forecast extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      days: 0,\n      highs: 0,\n      lows: 0,\n      conds: 0,\n      formCity: 'toronto',\n      city: 'toronto',\n      code: '6167865'\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      formCity: event.target.value\n    });\n  }\n\n  async handleSubmit(event) {\n    this.setState({\n      city: this.state.formCity,\n      code: codes[this.state.formCity]\n    });\n    console.log(this.state);\n    this.componentDidMount();\n    event.preventDefault();\n  }\n\n  render() {\n    if (this.state.days === 0) {\n      return React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, \"The Forecast is loading, please wait\");\n    } else {\n      return React.createElement(\"div\", {\n        style: forecastStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, ids[this.state.code] + \"'s Forecast\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: divStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, \" \", React.createElement(WeatherCard, {\n        day: this.state.days[0],\n        high: this.state.highs[0],\n        low: this.state.lows[0],\n        condition: this.state.conds[0],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }), \" \"), React.createElement(\"div\", {\n        style: divStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, \" \", React.createElement(WeatherCard, {\n        day: this.state.days[1],\n        high: this.state.highs[1],\n        low: this.state.lows[1],\n        condition: this.state.conds[1],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }), \" \"), React.createElement(\"div\", {\n        style: divStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, \" \", React.createElement(WeatherCard, {\n        day: this.state.days[2],\n        high: this.state.highs[2],\n        low: this.state.lows[2],\n        condition: this.state.conds[2],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }), \" \"), React.createElement(\"div\", {\n        style: divStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, \" \", React.createElement(WeatherCard, {\n        day: this.state.days[3],\n        high: this.state.highs[3],\n        low: this.state.lows[3],\n        condition: this.state.conds[3],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }), \" \"), React.createElement(\"div\", {\n        style: divStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, \" \", React.createElement(WeatherCard, {\n        day: this.state.days[4],\n        high: this.state.highs[4],\n        low: this.state.lows[4],\n        condition: this.state.conds[4],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }), \" \")), React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, \"Choose a city to display its forecast \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }), React.createElement(\"select\", {\n        value: this.state.formCity,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"toronto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, \"Toronto\"), React.createElement(\"option\", {\n        value: \"brampton\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, \"Brampton\"), React.createElement(\"option\", {\n        value: \"mississauga\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, \"Mississauga\"), React.createElement(\"option\", {\n        value: \"richmondhill\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, \"Richmond Hill\"), React.createElement(\"option\", {\n        value: \"kitchener\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, \"Kitchener\"), React.createElement(\"option\", {\n        value: \"waterloo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, \"Waterloo\"), React.createElement(\"option\", {\n        value: \"markham\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, \"Markham\"), React.createElement(\"option\", {\n        value: \"ottawa\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, \"Ottawa\"), React.createElement(\"option\", {\n        value: \"hamilton\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, \"Hamilton\"), React.createElement(\"option\", {\n        value: \"vaughan\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, \"Vaughan\"), React.createElement(\"option\", {\n        value: \"oshawa\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, \"Oshawa\"))), React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"Submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      })));\n    }\n  }\n\n  async componentDidMount() {\n    changeURL(this.state.city);\n    var info = await Data.getEverything();\n    console.log(info);\n    this.setState({\n      days: info.days,\n      highs: info.highs,\n      lows: info.lows,\n      conds: info.conditions\n    });\n  }\n\n}\n\nexport default Forecast;","map":{"version":3,"sources":["C:\\Users\\Xerxis\\Desktop\\Projects\\forecast2\\src\\Forecast.js"],"names":["React","WeatherCard","CityList","key","ids","codes","toronto","brampton","mississauga","richmondhill","kitchener","waterloo","markham","ottawa","hamilton","vaughan","oshawa","url","days","divStyle","width","float","forecastStyle","minWidth","changeURL","city","genAPI","console","log","response","fetch","data","json","getAPI","temp","getDays","arr","i","push","Date","list","dt_txt","slice","getDay","getConditions","weather","main","getHighLows","starts","lows","highs","length","high","low","Number","MAX_SAFE_INTEGER","start","end","j","Math","max","temp_max","min","temp_min","toFixed","result","getEnd","entry1","getHours","getStarts","Data","getHourly","day","temps","forecast","index","findIndex","value","getEverything","info","conditions","highLows","Forecast","Component","constructor","props","state","conds","formCity","code","handleChange","bind","handleSubmit","event","setState","target","componentDidMount","preventDefault","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport WeatherCard from './WeatherCard.js';\nimport CityList from './CityList.js';\n\nconst key = \"54a84a123d401ac68736a6bca89f4301\";\nconst ids = {6167865: \"Toronto\", 5907364: \"Brampton\", 6075357: \"Mississauga\",\n6122091: \"Richmond Hill\", 5992996: \"Kitchener\", 6176823: \"Waterloo\",\n6066513: \"Markham\", 6094817: \"Ottawa\", 5969782: \"Hamilton\"\n, 6173577: \"Vaughan\", 6094578: \"Oshawa\"};\nconst codes = {toronto: '6167865', brampton: '5907364',\n\t\tmississauga: '6075357', richmondhill: '6122091', kitchener: '5992996',\n\t\twaterloo: '6176823', markham: '6066513', ottawa: '6094817',\n\t\thamilton: '5969782', vaughan: '6173577', oshawa: '6094578'};\nvar url = \"https://api.openweathermap.org/data/2.5/forecast?id=6167865\" + \"&appid=\" + key;\nconst days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\nconst divStyle = {\n\twidth: \"20%\",\n\tfloat: \"left\"\n};\nconst forecastStyle = {\n\tminWidth: \"500px\",\n};\n\nfunction changeURL(city){\n\turl = \"https://api.openweathermap.org/data/2.5/forecast?id=\" + codes[city] + \"&appid=\" + key;\n}\n\nvar genAPI = (async function(){\n\tconsole.log(url);\n\tvar response = await fetch(url);\n\tvar data =  await response.json();\n\treturn async function() {return await data;}\n})();\n\nasync function getAPI(){\n\tvar temp = await genAPI;\n\treturn await temp();\n}\n\nfunction getDays(data) {\n\tvar arr = [];\n\tfor (let i = 0; i < 40; i+=8){\n\t\tarr.push(days[(new Date(data.list[i].dt_txt.slice(0,10)).getDay() + 1) % 7]);\n\t}\n\treturn arr;\n}\n\t\nfunction getConditions(data) {\n\tvar arr = [];\n\tfor (let i = 0; i < 40; i+=8){\n\t\tarr.push(data.list[i].weather[0].main);\n\t}\n\treturn arr;\n}\n\nfunction getHighLows(data, starts) {\n\tvar lows = [];\n\tvar highs = [];\n\tfor (let i = 0; i < starts.length - 1; i++){\n\t\tvar high = 0;\n\t\tvar low = Number.MAX_SAFE_INTEGER;\n\t\tvar start = starts[i];\n\t\tvar end = starts[i + 1];\n\t\tfor (let j = start; j < end; j++){\n\t\t\thigh = Math.max(high, data.list[j].main.temp_max);\n\t\t\tlow = Math.min(low, data.list[j].main.temp_min);\n\t\t}\n\t\thighs.push((high - 273.15).toFixed(2));\n\t\tlows.push((low - 273.15).toFixed(2));\n\t}\n\tconst result = {highs: highs, lows: lows};\n\treturn result;\n}\n\nfunction getEnd(entry1) {\n\treturn (24 - new Date(entry1.dt_txt).getHours()) / 3;\n}\n\nfunction getStarts(data) {\n\tvar arr = [];\n\tlet end = getEnd(data[0]);\n\tarr.push(0);\n\tfor (let i = end; i <= 40; i+=8){\n\t\tarr.push(i);\n\t}\n\treturn arr;\n}\n\nvar Data = {\n  getHourly: async function(day) {\n\t\tvar temps = []\n\t\tvar forecast = await getAPI();\n\t\tconsole.log(forecast);\n\t\tvar arr = forecast.list;\n\t\tvar starts = getStarts(arr);\n\t\tvar index = getDays(forecast).findIndex(value => value === day);\n\t\tif (index === -1){\n\t\t\treturn null;\n\t\t}\n\t\tvar start = starts[index];\n\t\tvar end = starts[index + 1];\n\t\t// All of the data for the first day may not be present\n\t\tif (start === 0){\n\t\t\t// Push all the N/A data\n\t\t\tfor (let i = 0; i < 8-end; i++){\n\t\t\t\ttemps.push(\"N/A\");\n\t\t\t}\t\n\t\t}\n\t\tfor (let i = start; i < end; i++){\n\t\t\ttemps.push((arr[i].main.temp - 273.15).toFixed(2) + \"Â°C\");\n\t\t}\n\t\treturn temps;\n\t},\n\tgetEverything: async function() {\n\t\tvar response = await fetch(url);\n\t\tvar forecast =  await response.json();\n\t\tvar starts = getStarts(forecast.list);\n\t\tvar info = {};\n\t\tinfo.days = getDays(forecast);\n\t\tinfo.conditions = getConditions(forecast);\n\t\tvar highLows = getHighLows(forecast, starts);\n\t\tinfo.highs = highLows.highs;\n\t\tinfo.lows = highLows.lows;\n\t\treturn  await info;\n\t}\t\n}\n\n\n\nclass Forecast extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {days: 0,\n\t\thighs: 0,\n\t\tlows: 0,\n\t\tconds: 0,\n\t\tformCity: 'toronto',\n\t\tcity: 'toronto',\n\t\tcode: '6167865'\n\t\t};\n\t\tthis.handleChange = this.handleChange.bind(this);\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\n\t}\n\t\n\thandleChange(event) {\n\t\tthis.setState({formCity: event.target.value});\n\t}\n\t\n\tasync handleSubmit(event) {\n\t\tthis.setState({city: this.state.formCity, code: codes[this.state.formCity]});\n\t\tconsole.log(this.state);\n\t\tthis.componentDidMount();\n    event.preventDefault();\n  }\n\t\n\trender(){\n\t\tif (this.state.days === 0){\n\t\t\treturn (<h1>{\"The Forecast is loading, please wait\"}</h1>)\n\t\t}\n\t\telse {\n\t\t\treturn (\n\t\t\t<div style = {forecastStyle}>\n\t\t\t<h1>{ids[this.state.code] + \"'s Forecast\"}</h1>\n\t\t\t<div>\n\t\t\t<div style = {divStyle} > <WeatherCard day={this.state.days[0]} high={this.state.highs[0]} low={this.state.lows[0]} condition={this.state.conds[0]}/> </div>\n\t\t\t<div style = {divStyle} > <WeatherCard day={this.state.days[1]} high={this.state.highs[1]} low={this.state.lows[1]} condition={this.state.conds[1]}/> </div>\n\t\t\t<div style = {divStyle} > <WeatherCard day={this.state.days[2]} high={this.state.highs[2]} low={this.state.lows[2]} condition={this.state.conds[2]}/> </div>\n\t\t\t<div style = {divStyle} > <WeatherCard day={this.state.days[3]} high={this.state.highs[3]} low={this.state.lows[3]} condition={this.state.conds[3]}/> </div>\n\t\t\t<div style = {divStyle} > <WeatherCard day={this.state.days[4]} high={this.state.highs[4]} low={this.state.lows[4]} condition={this.state.conds[4]}/> </div>\n\t\t\t</div>\n\t\t\t<form onSubmit={this.handleSubmit}>\n        <label>\n          Choose a city to display its forecast <br></br>\n          <select value={this.state.formCity} onChange={this.handleChange}>\n            <option value=\"toronto\">Toronto</option>\n            <option value=\"brampton\">Brampton</option>\n\t\t\t\t\t\t<option value=\"mississauga\">Mississauga</option>\n\t\t\t\t\t\t<option value=\"richmondhill\">Richmond Hill</option>\n\t\t\t\t\t\t<option value=\"kitchener\">Kitchener</option>\n\t\t\t\t\t\t<option value=\"waterloo\">Waterloo</option>\n\t\t\t\t\t\t<option value=\"markham\">Markham</option>\n\t\t\t\t\t\t<option value=\"ottawa\">Ottawa</option>\n\t\t\t\t\t\t<option value=\"hamilton\">Hamilton</option>\n\t\t\t\t\t\t<option value=\"vaughan\">Vaughan</option>\n\t\t\t\t\t\t<option value=\"oshawa\">Oshawa</option>\n          </select>\n        </label>\n        <input type=\"submit\" value=\"Submit\" />\n      </form>\n\t\t\t</div>\n\t\t\t);\n\t\t}\n\t}\n\t\n\tasync componentDidMount(){\n\t\tchangeURL(this.state.city);\n\t\tvar info = await Data.getEverything();\n\t\tconsole.log(info);\n\t\tthis.setState({days: info.days, highs: info.highs,\n\t\tlows: info.lows, conds: info.conditions});\n\t}\n}\n\t\nexport default Forecast;"]},"metadata":{},"sourceType":"module"}