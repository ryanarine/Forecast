{"version":3,"sources":["images/Rainy.webp","images/Rainy.jpg","images/Snowy.webp","images/Snowy.jpg","images/Cloudy.webp","images/Cloudy.jpg","images/Clear.webp","images/Clear.jpg","images/Thunderstorm.webp","images/Thunderstorm.jpg","images/Drizzle.webp","images/Drizzle.jpg","images/Fog.webp","images/Fog.jpg","Images.js","WeatherCard.js","DayCast.js","Map.js","Data.js","Forecast.js","index.js"],"names":["module","exports","webp","e","document","createElement","getContext","toDataURL","indexOf","canUseWebP","map","Rain","rainy","Snow","snowy","Clouds","cloudy","Clear","clear","Thunderstorm","storm","Drizzle","drizzle","Rainjpg","rainyjpg","Snowjpg","snowyjpg","Cloudsjpg","cloudyjpg","Clearjpg","clearjpg","Thunderstormjpg","stormjpg","Drizzlejpg","drizzlejpg","getBgImg","condition","fog","fogjpg","WeatherCard","props","className","style","backgroundImage","day","high","low","DayCast","backgroundColor","mainCondition","backgroundSize","backgroundPosition","timeSlots","columns","headers","header","i","key","tableEntries","values","start","conditions","descriptions","humidities","cloudiness","windSpeeds","align","colSpan","length","startingLat","startingLon","startingZoom","prevLat","prevLon","Map","state","lat","lon","OlMap","target","layers","OlLayerTile","source","OlSourceOSM","view","OlView","center","fromLonLat","zoom","handleSubmit","bind","this","submit","Fragment","type","value","onClick","id","setTarget","on","toLonLat","coordinate","setState","getView","getCenter","getZoom","Component","days","getCityHeader","data","name","city","getDays","arr","push","Date","list","dt_txt","slice","getDay","getConditions","conds","starts","weights","maxValue","maxCondition","j","cond","getHighLows","lows","highs","Number","MAX_SAFE_INTEGER","end","Math","max","main","temp_max","min","temp_min","toFixed","getStarts","entry1","getHours","getHourly","temps","descs","humids","clouds","temp","weather","description","humidity","all","wind","speed","url","a","fetch","response","status","json","forecast","info","highLows","hourlyData","hourly","hourlyConditions","getEverything","Forecast","dayIndex","handleMapSubmit","dayFocus","newurl","changeURL","componentDidMount","index","width","margin","cards","React","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.9e9c5be8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Rainy.4aa9e5a1.webp\";","module.exports = __webpack_public_path__ + \"static/media/Rainy.17880203.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Snowy.c9be1bb9.webp\";","module.exports = __webpack_public_path__ + \"static/media/Snowy.10bfaec4.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Cloudy.94af7710.webp\";","module.exports = __webpack_public_path__ + \"static/media/Cloudy.b326fe67.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Clear.66a7c826.webp\";","module.exports = __webpack_public_path__ + \"static/media/Clear.bc291e9f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Thunderstorm.ca95847a.webp\";","module.exports = __webpack_public_path__ + \"static/media/Thunderstorm.a6ff7d8c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Drizzle.025a3d3a.webp\";","module.exports = __webpack_public_path__ + \"static/media/Drizzle.5f42afca.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Fog.f2a46c22.webp\";","module.exports = __webpack_public_path__ + \"static/media/Fog.e0ea5e49.jpg\";","/* Handles condition to image mapping */\r\nimport rainy from \"./images/Rainy.webp\";\r\nimport rainyjpg from \"./images/Rainy.jpg\";\r\nimport snowy from \"./images/Snowy.webp\";\r\nimport snowyjpg from \"./images/Snowy.jpg\";\r\nimport cloudy from \"./images/Cloudy.webp\";\r\nimport cloudyjpg from \"./images/Cloudy.jpg\";\r\nimport clear from \"./images/Clear.webp\";\r\nimport clearjpg from \"./images/Clear.jpg\";\r\nimport storm from \"./images/Thunderstorm.webp\";\r\nimport stormjpg from \"./images/Thunderstorm.jpg\";\r\nimport drizzle from \"./images/Drizzle.webp\";\r\nimport drizzlejpg from \"./images/Drizzle.jpg\";\r\nimport fog from \"./images/Fog.webp\";\r\nimport fogjpg from \"./images/Fog.jpg\";\r\n\r\nfunction canUseWebP() {\r\n  var e = document.createElement(\"canvas\");\r\n  if (!!(e.getContext && e.getContext(\"2d\"))) {\r\n    return e.toDataURL(\"image/webp\").indexOf(\"data:image/webp\") === 0;\r\n  }\r\n  return false;\r\n}\r\n\r\nconst webp = canUseWebP();\r\n\r\nconst map = {\r\n  Rain: rainy,\r\n  Snow: snowy,\r\n  Clouds: cloudy,\r\n  Clear: clear,\r\n  Thunderstorm: storm,\r\n  Drizzle: drizzle,\r\n  Rainjpg: rainyjpg,\r\n  Snowjpg: snowyjpg,\r\n  Cloudsjpg: cloudyjpg,\r\n  Clearjpg: clearjpg,\r\n  Thunderstormjpg: stormjpg,\r\n  Drizzlejpg: drizzlejpg\r\n};\r\n\r\nfunction getBgImg(condition) {\r\n  if (map[condition]) {\r\n    return webp ? map[condition] : map[condition + \"jpg\"];\r\n  }\r\n  return webp ? fog : fogjpg;\r\n}\r\n\r\nexport default getBgImg;\r\n","import React from \"react\";\r\nimport getBgImg from \"./Images\";\r\n\r\nfunction WeatherCard(props) {\r\n  return (\r\n    <div className=\"weatherCard\" style={{ backgroundImage: \"url(\" + getBgImg(props.condition) + \")\" }}>\r\n      <h2 className=\"mainh2\">{props.day}</h2>\r\n      <h2 className=\"mainh2\">{props.condition}</h2>\r\n      <h2 className=\"highh2\">{\"High: \" + props.high + \"°C\"}</h2>\r\n      <h2 className=\"lowh2\">{\"Low: \" + props.low + \"°C\"}</h2>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default WeatherCard;\r\n","import React from \"react\";\r\nimport getBgImg from \"./Images\";\r\n\r\nfunction DayCast(props) {\r\n  const style = {\r\n    backgroundColor: \"mediumaquamarine\",\r\n    backgroundImage: \"url(\" + getBgImg(props.mainCondition) + \")\",\r\n    backgroundSize: \"cover\",\r\n    backgroundPosition: \"center\"\r\n  };\r\n\r\n  const timeSlots = [\"12 AM\", \"3 AM\", \"6 AM\", \"9 AM\", \"12 PM\", \"3 PM\", \"6 PM\", \"9 PM\"];\r\n  const columns = [\"Time\", \"Temperature\", \"Condition\", \"Description\", \"Humidity\", \"Cloudiness\", \"Wind Speed\"];\r\n  const headers = columns.map((header, i) => <th key={i}>{header}</th>);\r\n  const tableEntries = [0, 1, 2, 3, 4, 5, 6, 7].map(i => (\r\n    <tr key={i}>\r\n      <td>{timeSlots[i]}</td>\r\n      <td>{props.values[props.start + i]}</td>\r\n      <td>{props.conditions[props.start + i]}</td>\r\n      <td>{props.descriptions[props.start + i]}</td>\r\n      <td>{props.humidities[props.start + i]}</td>\r\n      <td>{props.cloudiness[props.start + i]}</td>\r\n      <td>{props.windSpeeds[props.start + i]}</td>\r\n    </tr>\r\n  ));\r\n  return (\r\n    <table align={\"center\"} style={style}>\r\n      <tbody>\r\n        <tr>\r\n          <th colSpan={columns.length}>{props.day}</th>\r\n        </tr>\r\n        <tr>{headers}</tr>\r\n        {tableEntries}\r\n      </tbody>\r\n    </table>\r\n  );\r\n}\r\n\r\nexport default DayCast;\r\n","import React, { Component } from \"react\";\r\nimport OlMap from \"ol/Map\";\r\nimport OlView from \"ol/View\";\r\nimport OlLayerTile from \"ol/layer/Tile\";\r\nimport OlSourceOSM from \"ol/source/OSM\";\r\nimport { toLonLat, fromLonLat } from \"ol/proj\";\r\n\r\nvar startingLat = 43.59;\r\nvar startingLon = -79.7;\r\nvar startingZoom = 8;\r\nvar prevLat = startingLat;\r\nvar prevLon = startingLon;\r\n\r\nclass Map extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = { lat: prevLat, lon: prevLon };\r\n    this.map = new OlMap({\r\n      target: null,\r\n      layers: [\r\n        new OlLayerTile({\r\n          source: new OlSourceOSM()\r\n        })\r\n      ],\r\n      view: new OlView({\r\n        center: fromLonLat([startingLon, startingLat]),\r\n        zoom: [startingZoom]\r\n      })\r\n    });\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleSubmit() {\r\n    this.props.submit(this.state.lat, this.state.lon);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <label>Click on the map to see the forecast there</label> <br></br>\r\n        <label>\r\n          Latitude: {this.state.lat} Longitude: {this.state.lon}\r\n        </label>\r\n        <br></br>\r\n        <input type=\"submit\" value=\"Submit Coordinates\" onClick={this.handleSubmit} />\r\n        <div id=\"map\"></div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.map.setTarget(\"map\");\r\n    this.map.on(\"click\", e => {\r\n      let center = toLonLat(e.coordinate);\r\n      this.setState({ lon: center[0], lat: center[1] });\r\n    });\r\n  }\r\n\r\n  // Change started configuration to the previous configuration\r\n  componentWillUnmount() {\r\n    [startingLon, startingLat] = toLonLat(this.map.getView().getCenter());\r\n    startingZoom = this.map.getView().getZoom();\r\n    [prevLon, prevLat] = [this.state.lon, this.state.lat];\r\n  }\r\n}\r\n\r\nexport default Map;\r\n","const days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\r\n\r\n/*\r\n-The following are functions that parse the json data\r\n-The data comes in as an array of 40 entries\r\n-Each entry represents the weather during a 3 hour time period\r\n-Roughly every 3 hours the API updates the data, so a new time period is entered\r\nbut the oldest one is removed\r\n-Since this is a 5-day forecast, the data for the 6th day (if there is one)\r\nis ignored\r\n-The missing data for the 1st day is compensated for by inserting the string\r\n'N/A' for the missing time periods\r\n*/\r\n\r\n// Get the name of the city and return header string\r\nfunction getCityHeader(data) {\r\n  let name = data.city.name;\r\n  if (name) {\r\n    return name + \"'s Forecast\";\r\n  }\r\n  return \"Forecast of Unknown City\";\r\n}\r\n\r\n// Get the names of the 5 days\r\nfunction getDays(data) {\r\n  var arr = [];\r\n  for (let i = 0; i < 40; i += 8) {\r\n    arr.push(days[(new Date(data.list[i].dt_txt.slice(0, 10)).getDay() + 1) % 7]);\r\n  }\r\n  return arr;\r\n}\r\n\r\n// Get the main conditions of each day\r\nfunction getConditions(conds, starts) {\r\n  var arr = [];\r\n  var day = [];\r\n  // Weight value is based how important a timeslot is to a normal working citizen\r\n  // For example the weather at 3AM is significantly less important\r\n  // than the weather at 3PM to a normal working citizen\r\n  // In other words, working hours have a larger weight than sleeping/resting hours\r\n  const weights = [1, 1, 2, 3, 3, 3, 2, 1];\r\n  for (let i = 0; i < 5; i++) {\r\n    day = { maxValue: 0, maxCondition: \"N/A\" };\r\n    for (let j = 8 * i; j < 8 * (i + 1); j++) {\r\n      let cond = conds[j];\r\n      if (cond === \"N/A\") continue;\r\n      day[cond] = day[cond] + weights[j % 8] || weights[j % 8];\r\n      if (day[cond] > day.maxValue) {\r\n        day.maxValue = day[cond];\r\n        day.maxCondition = cond;\r\n      }\r\n    }\r\n    arr.push(day.maxCondition);\r\n  }\r\n  return arr;\r\n}\r\n\r\n// Get the high and low temperatures of each day\r\nfunction getHighLows(data, starts) {\r\n  var lows = [];\r\n  var highs = [];\r\n  for (let i = 0; i < starts.length - 1; i++) {\r\n    var high = 0; // Temperatures in Kelvin cannot go below or at 0\r\n    var low = Number.MAX_SAFE_INTEGER;\r\n    var start = starts[i];\r\n    var end = starts[i + 1];\r\n    for (let j = start; j < end; j++) {\r\n      high = Math.max(high, data[j].main.temp_max);\r\n      low = Math.min(low, data[j].main.temp_min);\r\n    }\r\n    highs.push((high - 273.15).toFixed(2));\r\n    lows.push((low - 273.15).toFixed(2));\r\n  }\r\n  return { highs: highs, lows: lows };\r\n}\r\n\r\n// Get the ending index of the data array that corresponds to the first day\r\nfunction getEnd(entry1) {\r\n  return (24 - new Date(entry1.dt_txt).getHours()) / 3;\r\n}\r\n\r\n// Get the starting index of the data array that corresponds to each day\r\nfunction getStarts(data) {\r\n  var arr = [];\r\n  let end = getEnd(data[0]);\r\n  arr.push(0);\r\n  for (let i = end; i <= 40; i += 8) {\r\n    arr.push(i);\r\n  }\r\n  return arr;\r\n}\r\n\r\n// Get the data (temperature, condition, condition description) for each time period\r\nfunction getHourly(arr, starts) {\r\n  var start = starts[1];\r\n  var temps = [];\r\n  var conds = [];\r\n  var descs = [];\r\n  var humids = [];\r\n  var clouds = [];\r\n  var windSpeeds = [];\r\n  // All of the data for the first day may not be present\r\n  // Push all the N/A data\r\n  for (let i = 0; i < 8 - start; i++) {\r\n    temps.push(\"N/A\");\r\n    conds.push(\"N/A\");\r\n    descs.push(\"N/A\");\r\n    humids.push(\"N/A\");\r\n    clouds.push(\"N/A\");\r\n    windSpeeds.push(\"N/A\");\r\n  }\r\n  for (let i = 0; i < 40 - 8 + start; i++) {\r\n    temps.push((arr[i].main.temp - 273.15).toFixed(2) + \"°C\");\r\n    conds.push(arr[i].weather[0].main);\r\n    descs.push(arr[i].weather[0].description);\r\n    humids.push(arr[i].main.humidity + \"%\");\r\n    clouds.push(arr[i].clouds.all + \"%\");\r\n    windSpeeds.push(arr[i].wind.speed + \" m/s\");\r\n  }\r\n  return { temps, conds, descs, humids, clouds, windSpeeds };\r\n}\r\n\r\n// Get all the relevant data\r\nasync function getEverything(url) {\r\n  var response = await fetch(url);\r\n  if (response.status === 429) {\r\n    return -1;\r\n  } // Too many requests\r\n  var forecast = await response.json();\r\n  var starts = getStarts(forecast.list);\r\n  var info = {};\r\n  info.header = getCityHeader(forecast);\r\n  info.days = getDays(forecast);\r\n  var highLows = getHighLows(forecast.list, starts);\r\n  var hourlyData = getHourly(forecast.list, starts);\r\n  info.conditions = getConditions(hourlyData.conds, starts);\r\n  info.highs = highLows.highs;\r\n  info.lows = highLows.lows;\r\n  info.hourly = hourlyData.temps;\r\n  info.hourlyConditions = hourlyData.conds;\r\n  info.descriptions = hourlyData.descs;\r\n  info.humidities = hourlyData.humids;\r\n  info.cloudiness = hourlyData.clouds;\r\n  info.windSpeeds = hourlyData.windSpeeds;\r\n  return info;\r\n}\r\n\r\nexport default getEverything;\r\n","import React from \"react\";\r\nimport WeatherCard from \"./WeatherCard\";\r\nimport DayCast from \"./DayCast\";\r\nimport \"./Forecast.css\";\r\nimport Map from \"./Map\";\r\nimport getEverything from \"./Data\";\r\n\r\n/* Global variables */\r\nconst key = \"54a84a123d401ac68736a6bca89f4301\";\r\n\r\nvar url = \"https://api.openweathermap.org/data/2.5/forecast?id=6167865&appid=\" + key;\r\n\r\n// return whether or not url changed\r\nfunction changeURL(lat, lon) {\r\n  let newurl = \"https://api.openweathermap.org/data/2.5/forecast?lat=\" + lat + \"&lon=\" + lon + \"&appid=\" + key;\r\n  if (newurl === url) {\r\n    return false;\r\n  }\r\n  url = newurl;\r\n  return true;\r\n}\r\n\r\n/* The Component */\r\nclass Forecast extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      days: 0,\r\n      highs: 0, // high temperatures for each day\r\n      lows: 0, //  low temperatures for each day\r\n      conditions: 0, // conditions for each day\r\n      header: \"Toronto's Forecast\", // main header for application\r\n      status: 200, // status of fetch calls\r\n      hourly: [], // temperatures for each 3-hour time period\r\n      hourlyConditions: [], // conditions for each 3-hour time period\r\n      descriptions: [], // descriptions of the conditions for each 3-hour time period\r\n      humidities: [], // humidity percentage for each 3-hour time period\r\n      cloudiness: [], // percentage of clouds for each 3-hour time period\r\n      windSpeeds: [], // wind speed for each 3-hour time period\r\n      dayIndex: -1 // index of which weather card is currently being focused on\r\n      // -1 means no weather card is being focused on i.e main forecast is displayed\r\n    };\r\n    this.handleMapSubmit = this.handleMapSubmit.bind(this);\r\n    this.dayFocus = this.dayFocus.bind(this);\r\n  }\r\n\r\n  // Executes when coordinates are submitted\r\n  handleMapSubmit(lat, lon) {\r\n    if (changeURL(lat, lon)) {\r\n      this.componentDidMount();\r\n    }\r\n  }\r\n\r\n  // Executes when a single WeatherCards gets clicked on\r\n  // index indicates which WeatherCard was clicked\r\n  dayFocus(index) {\r\n    this.setState({ dayIndex: index });\r\n  }\r\n\r\n  render() {\r\n    // Default render\r\n    if (this.state.days === 0) {\r\n      return <h1>{\"The Forecast is loading, please wait\"}</h1>;\r\n    }\r\n    // API only allows 60 requests per minute\r\n    if (this.state.status === 429) {\r\n      return <h1>{\"Too many forecast requests have been made. Please come back in an hour.\"}</h1>;\r\n    }\r\n    // render detailed forecast for single day\r\n    if (this.state.dayIndex !== -1) {\r\n      return (\r\n        <div style={{ width: \"fit-content\", margin: \"auto\" }}>\r\n          <DayCast\r\n            day={this.state.days[this.state.dayIndex]}\r\n            values={this.state.hourly}\r\n            start={this.state.dayIndex * 8}\r\n            conditions={this.state.hourlyConditions}\r\n            descriptions={this.state.descriptions}\r\n            humidities={this.state.humidities}\r\n            cloudiness={this.state.cloudiness}\r\n            windSpeeds={this.state.windSpeeds}\r\n            mainCondition={this.state.conditions[this.state.dayIndex]}\r\n          />\r\n          <button id=\"prevbtn\" className=\"cardButton\" onClick={() => this.dayFocus((this.state.dayIndex + 4) % 5)}>\r\n            Previous\r\n          </button>\r\n          <button id=\"backbtn\" className=\"cardButton\" onClick={() => this.dayFocus(-1)}>\r\n            Back\r\n          </button>\r\n          <button id=\"nextbtn\" className=\"cardButton\" onClick={() => this.dayFocus((this.state.dayIndex + 1) % 5)}>\r\n            Next\r\n          </button>\r\n        </div>\r\n      );\r\n    }\r\n    // render basic forecast for 5 days\r\n    else {\r\n      const cards = [0, 1, 2, 3, 4].map(i => (\r\n        <div onClick={() => this.dayFocus(i)} className={\"Card\"} key={i}>\r\n          <WeatherCard\r\n            day={this.state.days[i]}\r\n            high={this.state.highs[i]}\r\n            low={this.state.lows[i]}\r\n            condition={this.state.conditions[i]}\r\n          />\r\n        </div>\r\n      ));\r\n      return (\r\n        <div>\r\n          <h1>{this.state.header}</h1>\r\n          <div id=\"cardContainer\">{cards}</div>\r\n          <Map submit={this.handleMapSubmit} />\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  // Data gets fetched here\r\n  async componentDidMount() {\r\n    var info = await getEverything(url);\r\n    info === -1 ? this.setState({ status: 429 }) : this.setState({ ...info });\r\n  }\r\n}\r\n\r\nexport default Forecast;\r\n//TODO: Squash background images using your image editor\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport Forecast from \"./Forecast.js\";\r\n\r\nReactDOM.render(<Forecast />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}